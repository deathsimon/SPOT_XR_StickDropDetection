<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="314" onload="init(evt)" viewBox="0 0 1200 314" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="314" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile.svg --pid 37945</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="303.00"> </text><svg id="frames" x="10" width="1180" total_samples="188"><g><title>ok (rclpy/context.py:87) (1 samples, 0.53%)</title><rect x="0.0000%" y="116" width="0.5319%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="126.50"></text></g><g><title>spin (rclpy/__init__.py:225) (3 samples, 1.60%)</title><rect x="0.0000%" y="100" width="1.5957%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="110.50"></text></g><g><title>ok (rclpy/context.py:88) (2 samples, 1.06%)</title><rect x="0.5319%" y="116" width="1.0638%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.7819%" y="126.50"></text></g><g><title>can_execute (rclpy/callback_groups.py:102) (1 samples, 0.53%)</title><rect x="1.5957%" y="196" width="0.5319%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="1.8457%" y="206.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:525) (2 samples, 1.06%)</title><rect x="1.5957%" y="164" width="1.0638%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="2"/><text x="1.8457%" y="174.50"></text></g><g><title>can_execute (rclpy/executors.py:467) (2 samples, 1.06%)</title><rect x="1.5957%" y="180" width="1.0638%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="2"/><text x="1.8457%" y="190.50"></text></g><g><title>can_execute (rclpy/callback_groups.py:103) (1 samples, 0.53%)</title><rect x="2.1277%" y="196" width="0.5319%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="2.3777%" y="206.50"></text></g><g><title>can_execute (rclpy/callback_groups.py:102) (1 samples, 0.53%)</title><rect x="4.2553%" y="196" width="0.5319%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="1"/><text x="4.5053%" y="206.50"></text></g><g><title>can_execute (rclpy/executors.py:467) (4 samples, 2.13%)</title><rect x="3.1915%" y="180" width="2.1277%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="4"/><text x="3.4415%" y="190.50">c..</text></g><g><title>can_execute (rclpy/callback_groups.py:103) (1 samples, 0.53%)</title><rect x="4.7872%" y="196" width="0.5319%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="1"/><text x="5.0372%" y="206.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:527) (6 samples, 3.19%)</title><rect x="2.6596%" y="164" width="3.1915%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="6"/><text x="2.9096%" y="174.50">_wa..</text></g><g><title>clients (rclpy/node.py:243) (1 samples, 0.53%)</title><rect x="5.3191%" y="180" width="0.5319%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="1"/><text x="5.5691%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:528) (1 samples, 0.53%)</title><rect x="5.8511%" y="164" width="0.5319%" height="15" fill="rgb(216,20,37)" fg:x="11" fg:w="1"/><text x="6.1011%" y="174.50"></text></g><g><title>can_execute (rclpy/executors.py:467) (1 samples, 0.53%)</title><rect x="5.8511%" y="180" width="0.5319%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="1"/><text x="6.1011%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:531) (2 samples, 1.06%)</title><rect x="6.3830%" y="164" width="1.0638%" height="15" fill="rgb(217,207,13)" fg:x="12" fg:w="2"/><text x="6.6330%" y="174.50"></text></g><g><title>waitables (rclpy/node.py:263) (1 samples, 0.53%)</title><rect x="6.9149%" y="180" width="0.5319%" height="15" fill="rgb(231,73,38)" fg:x="13" fg:w="1"/><text x="7.1649%" y="190.50"></text></g><g><title>__exit__ (contextlib.py:558) (1 samples, 0.53%)</title><rect x="7.9787%" y="180" width="0.5319%" height="15" fill="rgb(225,20,46)" fg:x="15" fg:w="1"/><text x="8.2287%" y="190.50"></text></g><g><title>__exit__ (contextlib.py:561) (7 samples, 3.72%)</title><rect x="8.5106%" y="180" width="3.7234%" height="15" fill="rgb(210,31,41)" fg:x="16" fg:w="7"/><text x="8.7606%" y="190.50">__ex..</text></g><g><title>__exit__ (rclpy/qos_event.py:123) (1 samples, 0.53%)</title><rect x="11.7021%" y="196" width="0.5319%" height="15" fill="rgb(221,200,47)" fg:x="22" fg:w="1"/><text x="11.9521%" y="206.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:546) (10 samples, 5.32%)</title><rect x="7.4468%" y="164" width="5.3191%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="10"/><text x="7.6968%" y="174.50">_wait_f..</text></g><g><title>__exit__ (contextlib.py:571) (1 samples, 0.53%)</title><rect x="12.2340%" y="180" width="0.5319%" height="15" fill="rgb(249,33,26)" fg:x="23" fg:w="1"/><text x="12.4840%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:551) (2 samples, 1.06%)</title><rect x="12.7660%" y="164" width="1.0638%" height="15" fill="rgb(235,183,28)" fg:x="24" fg:w="2"/><text x="13.0160%" y="174.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:558) (1 samples, 0.53%)</title><rect x="13.8298%" y="164" width="0.5319%" height="15" fill="rgb(221,5,38)" fg:x="26" fg:w="1"/><text x="14.0798%" y="174.50"></text></g><g><title>handle (rclpy/client.py:184) (1 samples, 0.53%)</title><rect x="13.8298%" y="180" width="0.5319%" height="15" fill="rgb(247,18,42)" fg:x="26" fg:w="1"/><text x="14.0798%" y="190.50"></text></g><g><title>enter_context (contextlib.py:492) (3 samples, 1.60%)</title><rect x="14.3617%" y="180" width="1.5957%" height="15" fill="rgb(241,131,45)" fg:x="27" fg:w="3"/><text x="14.6117%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:559) (5 samples, 2.66%)</title><rect x="14.3617%" y="164" width="2.6596%" height="15" fill="rgb(249,31,29)" fg:x="27" fg:w="5"/><text x="14.6117%" y="174.50">_w..</text></g><g><title>enter_context (contextlib.py:493) (2 samples, 1.06%)</title><rect x="15.9574%" y="180" width="1.0638%" height="15" fill="rgb(225,111,53)" fg:x="30" fg:w="2"/><text x="16.2074%" y="190.50"></text></g><g><title>_push_cm_exit (contextlib.py:511) (2 samples, 1.06%)</title><rect x="15.9574%" y="196" width="1.0638%" height="15" fill="rgb(238,160,17)" fg:x="30" fg:w="2"/><text x="16.2074%" y="206.50"></text></g><g><title>_create_exit_wrapper (contextlib.py:444) (2 samples, 1.06%)</title><rect x="15.9574%" y="212" width="1.0638%" height="15" fill="rgb(214,148,48)" fg:x="30" fg:w="2"/><text x="16.2074%" y="222.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:566) (1 samples, 0.53%)</title><rect x="17.0213%" y="164" width="0.5319%" height="15" fill="rgb(232,36,49)" fg:x="32" fg:w="1"/><text x="17.2713%" y="174.50"></text></g><g><title>handle (rclpy/service.py:84) (1 samples, 0.53%)</title><rect x="17.0213%" y="180" width="0.5319%" height="15" fill="rgb(209,103,24)" fg:x="32" fg:w="1"/><text x="17.2713%" y="190.50"></text></g><g><title>enter_context (contextlib.py:492) (1 samples, 0.53%)</title><rect x="18.0851%" y="180" width="0.5319%" height="15" fill="rgb(229,88,8)" fg:x="34" fg:w="1"/><text x="18.3351%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:567) (3 samples, 1.60%)</title><rect x="17.5532%" y="164" width="1.5957%" height="15" fill="rgb(213,181,19)" fg:x="33" fg:w="3"/><text x="17.8032%" y="174.50"></text></g><g><title>enter_context (contextlib.py:493) (1 samples, 0.53%)</title><rect x="18.6170%" y="180" width="0.5319%" height="15" fill="rgb(254,191,54)" fg:x="35" fg:w="1"/><text x="18.8670%" y="190.50"></text></g><g><title>_push_cm_exit (contextlib.py:511) (1 samples, 0.53%)</title><rect x="18.6170%" y="196" width="0.5319%" height="15" fill="rgb(241,83,37)" fg:x="35" fg:w="1"/><text x="18.8670%" y="206.50"></text></g><g><title>_create_exit_wrapper (contextlib.py:444) (1 samples, 0.53%)</title><rect x="18.6170%" y="212" width="0.5319%" height="15" fill="rgb(233,36,39)" fg:x="35" fg:w="1"/><text x="18.8670%" y="222.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:583) (1 samples, 0.53%)</title><rect x="19.1489%" y="164" width="0.5319%" height="15" fill="rgb(226,3,54)" fg:x="36" fg:w="1"/><text x="19.3989%" y="174.50"></text></g><g><title>enter_context (contextlib.py:493) (1 samples, 0.53%)</title><rect x="19.1489%" y="180" width="0.5319%" height="15" fill="rgb(245,192,40)" fg:x="36" fg:w="1"/><text x="19.3989%" y="190.50"></text></g><g><title>_push_cm_exit (contextlib.py:511) (1 samples, 0.53%)</title><rect x="19.1489%" y="196" width="0.5319%" height="15" fill="rgb(238,167,29)" fg:x="36" fg:w="1"/><text x="19.3989%" y="206.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:587) (1 samples, 0.53%)</title><rect x="19.6809%" y="164" width="0.5319%" height="15" fill="rgb(232,182,51)" fg:x="37" fg:w="1"/><text x="19.9309%" y="174.50"></text></g><g><title>__add__ (rclpy/waitable.py:40) (1 samples, 0.53%)</title><rect x="21.8085%" y="180" width="0.5319%" height="15" fill="rgb(231,60,39)" fg:x="41" fg:w="1"/><text x="22.0585%" y="190.50"></text></g><g><title>__add__ (rclpy/waitable.py:42) (1 samples, 0.53%)</title><rect x="22.3404%" y="180" width="0.5319%" height="15" fill="rgb(208,69,12)" fg:x="42" fg:w="1"/><text x="22.5904%" y="190.50"></text></g><g><title>enter_context (contextlib.py:491) (1 samples, 0.53%)</title><rect x="22.8723%" y="180" width="0.5319%" height="15" fill="rgb(235,93,37)" fg:x="43" fg:w="1"/><text x="23.1223%" y="190.50"></text></g><g><title>__enter__ (rclpy/action/client.py:364) (1 samples, 0.53%)</title><rect x="23.9362%" y="196" width="0.5319%" height="15" fill="rgb(213,116,39)" fg:x="45" fg:w="1"/><text x="24.1862%" y="206.50"></text></g><g><title>enter_context (contextlib.py:492) (4 samples, 2.13%)</title><rect x="23.4043%" y="180" width="2.1277%" height="15" fill="rgb(222,207,29)" fg:x="44" fg:w="4"/><text x="23.6543%" y="190.50">e..</text></g><g><title>__enter__ (rclpy/qos_event.py:119) (2 samples, 1.06%)</title><rect x="24.4681%" y="196" width="1.0638%" height="15" fill="rgb(206,96,30)" fg:x="46" fg:w="2"/><text x="24.7181%" y="206.50"></text></g><g><title>enter_context (contextlib.py:493) (3 samples, 1.60%)</title><rect x="25.5319%" y="180" width="1.5957%" height="15" fill="rgb(218,138,4)" fg:x="48" fg:w="3"/><text x="25.7819%" y="190.50"></text></g><g><title>_push_cm_exit (contextlib.py:511) (3 samples, 1.60%)</title><rect x="25.5319%" y="196" width="1.5957%" height="15" fill="rgb(250,191,14)" fg:x="48" fg:w="3"/><text x="25.7819%" y="206.50"></text></g><g><title>_create_exit_wrapper (contextlib.py:444) (1 samples, 0.53%)</title><rect x="26.5957%" y="212" width="0.5319%" height="15" fill="rgb(239,60,40)" fg:x="50" fg:w="1"/><text x="26.8457%" y="222.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:590) (14 samples, 7.45%)</title><rect x="20.2128%" y="164" width="7.4468%" height="15" fill="rgb(206,27,48)" fg:x="38" fg:w="14"/><text x="20.4628%" y="174.50">_wait_for_..</text></g><g><title>get_num_entities (rclpy/qos_event.py:110) (1 samples, 0.53%)</title><rect x="27.1277%" y="180" width="0.5319%" height="15" fill="rgb(225,35,8)" fg:x="51" fg:w="1"/><text x="27.3777%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:594) (1 samples, 0.53%)</title><rect x="27.6596%" y="164" width="0.5319%" height="15" fill="rgb(250,213,24)" fg:x="52" fg:w="1"/><text x="27.9096%" y="174.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:596) (1 samples, 0.53%)</title><rect x="28.1915%" y="164" width="0.5319%" height="15" fill="rgb(247,123,22)" fg:x="53" fg:w="1"/><text x="28.4415%" y="174.50"></text></g><g><title>enter_context (contextlib.py:493) (1 samples, 0.53%)</title><rect x="28.1915%" y="180" width="0.5319%" height="15" fill="rgb(231,138,38)" fg:x="53" fg:w="1"/><text x="28.4415%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:605) (2 samples, 1.06%)</title><rect x="28.7234%" y="164" width="1.0638%" height="15" fill="rgb(231,145,46)" fg:x="54" fg:w="2"/><text x="28.9734%" y="174.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:607) (2 samples, 1.06%)</title><rect x="29.7872%" y="164" width="1.0638%" height="15" fill="rgb(251,118,11)" fg:x="56" fg:w="2"/><text x="30.0372%" y="174.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:609) (2 samples, 1.06%)</title><rect x="30.8511%" y="164" width="1.0638%" height="15" fill="rgb(217,147,25)" fg:x="58" fg:w="2"/><text x="31.1011%" y="174.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:611) (1 samples, 0.53%)</title><rect x="31.9149%" y="164" width="0.5319%" height="15" fill="rgb(247,81,37)" fg:x="60" fg:w="1"/><text x="32.1649%" y="174.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:615) (1 samples, 0.53%)</title><rect x="32.4468%" y="164" width="0.5319%" height="15" fill="rgb(209,12,38)" fg:x="61" fg:w="1"/><text x="32.6968%" y="174.50"></text></g><g><title>add_to_wait_set (rclpy/action/client.py:361) (1 samples, 0.53%)</title><rect x="33.5106%" y="180" width="0.5319%" height="15" fill="rgb(227,1,9)" fg:x="63" fg:w="1"/><text x="33.7606%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:617) (3 samples, 1.60%)</title><rect x="32.9787%" y="164" width="1.5957%" height="15" fill="rgb(248,47,43)" fg:x="62" fg:w="3"/><text x="33.2287%" y="174.50"></text></g><g><title>add_to_wait_set (rclpy/qos_event.py:115) (1 samples, 0.53%)</title><rect x="34.0426%" y="180" width="0.5319%" height="15" fill="rgb(221,10,30)" fg:x="64" fg:w="1"/><text x="34.2926%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:620) (1 samples, 0.53%)</title><rect x="34.5745%" y="164" width="0.5319%" height="15" fill="rgb(210,229,1)" fg:x="65" fg:w="1"/><text x="34.8245%" y="174.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:621) (33 samples, 17.55%)</title><rect x="35.1064%" y="164" width="17.5532%" height="15" fill="rgb(222,148,37)" fg:x="66" fg:w="33"/><text x="35.3564%" y="174.50">_wait_for_ready_callbacks (..</text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:635) (1 samples, 0.53%)</title><rect x="52.6596%" y="164" width="0.5319%" height="15" fill="rgb(234,67,33)" fg:x="99" fg:w="1"/><text x="52.9096%" y="174.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:642) (1 samples, 0.53%)</title><rect x="53.1915%" y="164" width="0.5319%" height="15" fill="rgb(247,98,35)" fg:x="100" fg:w="1"/><text x="53.4415%" y="174.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:643) (1 samples, 0.53%)</title><rect x="53.7234%" y="164" width="0.5319%" height="15" fill="rgb(247,138,52)" fg:x="101" fg:w="1"/><text x="53.9734%" y="174.50"></text></g><g><title>is_ready (rclpy/action/client.py:231) (1 samples, 0.53%)</title><rect x="53.7234%" y="180" width="0.5319%" height="15" fill="rgb(213,79,30)" fg:x="101" fg:w="1"/><text x="53.9734%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:664) (1 samples, 0.53%)</title><rect x="54.2553%" y="164" width="0.5319%" height="15" fill="rgb(246,177,23)" fg:x="102" fg:w="1"/><text x="54.5053%" y="174.50"></text></g><g><title>__init__ (rclpy/task.py:40) (1 samples, 0.53%)</title><rect x="55.8511%" y="212" width="0.5319%" height="15" fill="rgb(230,62,27)" fg:x="105" fg:w="1"/><text x="56.1011%" y="222.50"></text></g><g><title>__init__ (rclpy/task.py:212) (4 samples, 2.13%)</title><rect x="54.7872%" y="196" width="2.1277%" height="15" fill="rgb(216,154,8)" fg:x="103" fg:w="4"/><text x="55.0372%" y="206.50">_..</text></g><g><title>__init__ (rclpy/task.py:52) (1 samples, 0.53%)</title><rect x="56.3830%" y="212" width="0.5319%" height="15" fill="rgb(244,35,45)" fg:x="106" fg:w="1"/><text x="56.6330%" y="222.50"></text></g><g><title>_set_executor (rclpy/task.py:169) (1 samples, 0.53%)</title><rect x="56.3830%" y="228" width="0.5319%" height="15" fill="rgb(251,115,12)" fg:x="106" fg:w="1"/><text x="56.6330%" y="238.50"></text></g><g><title>_has_code_flag (inspect.py:296) (1 samples, 0.53%)</title><rect x="56.9149%" y="228" width="0.5319%" height="15" fill="rgb(240,54,50)" fg:x="107" fg:w="1"/><text x="57.1649%" y="238.50"></text></g><g><title>_unwrap_partial (functools.py:422) (1 samples, 0.53%)</title><rect x="56.9149%" y="244" width="0.5319%" height="15" fill="rgb(233,84,52)" fg:x="107" fg:w="1"/><text x="57.1649%" y="254.50"></text></g><g><title>__init__ (rclpy/task.py:222) (2 samples, 1.06%)</title><rect x="56.9149%" y="196" width="1.0638%" height="15" fill="rgb(207,117,47)" fg:x="107" fg:w="2"/><text x="57.1649%" y="206.50"></text></g><g><title>iscoroutinefunction (inspect.py:313) (2 samples, 1.06%)</title><rect x="56.9149%" y="212" width="1.0638%" height="15" fill="rgb(249,43,39)" fg:x="107" fg:w="2"/><text x="57.1649%" y="222.50"></text></g><g><title>_has_code_flag (inspect.py:299) (1 samples, 0.53%)</title><rect x="57.4468%" y="228" width="0.5319%" height="15" fill="rgb(209,38,44)" fg:x="108" fg:w="1"/><text x="57.6968%" y="238.50"></text></g><g><title>_make_handler (rclpy/executors.py:453) (7 samples, 3.72%)</title><rect x="54.7872%" y="180" width="3.7234%" height="15" fill="rgb(236,212,23)" fg:x="103" fg:w="7"/><text x="55.0372%" y="190.50">_mak..</text></g><g><title>__init__ (rclpy/task.py:225) (1 samples, 0.53%)</title><rect x="57.9787%" y="196" width="0.5319%" height="15" fill="rgb(242,79,21)" fg:x="109" fg:w="1"/><text x="58.2287%" y="206.50"></text></g><g><title>_make_handler (rclpy/executors.py:454) (1 samples, 0.53%)</title><rect x="58.5106%" y="180" width="0.5319%" height="15" fill="rgb(211,96,35)" fg:x="110" fg:w="1"/><text x="58.7606%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:667) (9 samples, 4.79%)</title><rect x="54.7872%" y="164" width="4.7872%" height="15" fill="rgb(253,215,40)" fg:x="103" fg:w="9"/><text x="55.0372%" y="174.50">_wait_..</text></g><g><title>_make_handler (rclpy/executors.py:458) (1 samples, 0.53%)</title><rect x="59.0426%" y="180" width="0.5319%" height="15" fill="rgb(211,81,21)" fg:x="111" fg:w="1"/><text x="59.2926%" y="190.50"></text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:680) (3 samples, 1.60%)</title><rect x="59.5745%" y="164" width="1.5957%" height="15" fill="rgb(208,190,38)" fg:x="112" fg:w="3"/><text x="59.8245%" y="174.50"></text></g><g><title>handle (rclpy/client.py:184) (1 samples, 0.53%)</title><rect x="60.6383%" y="180" width="0.5319%" height="15" fill="rgb(235,213,38)" fg:x="114" fg:w="1"/><text x="60.8883%" y="190.50"></text></g><g><title>_spin_once_impl (rclpy/executors.py:740) (113 samples, 60.11%)</title><rect x="1.5957%" y="132" width="60.1064%" height="15" fill="rgb(237,122,38)" fg:x="3" fg:w="113"/><text x="1.8457%" y="142.50">_spin_once_impl (rclpy/executors.py:740)</text></g><g><title>wait_for_ready_callbacks (rclpy/executors.py:723) (113 samples, 60.11%)</title><rect x="1.5957%" y="148" width="60.1064%" height="15" fill="rgb(244,218,35)" fg:x="3" fg:w="113"/><text x="1.8457%" y="158.50">wait_for_ready_callbacks (rclpy/executors.py:723)</text></g><g><title>_wait_for_ready_callbacks (rclpy/executors.py:690) (1 samples, 0.53%)</title><rect x="61.1702%" y="164" width="0.5319%" height="15" fill="rgb(240,68,47)" fg:x="115" fg:w="1"/><text x="61.4202%" y="174.50"></text></g><g><title>__call__ (rclpy/task.py:243) (1 samples, 0.53%)</title><rect x="61.7021%" y="148" width="0.5319%" height="15" fill="rgb(210,16,53)" fg:x="116" fg:w="1"/><text x="61.9521%" y="158.50"></text></g><g><title>__call__ (rclpy/task.py:251) (1 samples, 0.53%)</title><rect x="62.2340%" y="148" width="0.5319%" height="15" fill="rgb(235,124,12)" fg:x="117" fg:w="1"/><text x="62.4840%" y="158.50"></text></g><g><title>handler (rclpy/executors.py:439) (1 samples, 0.53%)</title><rect x="63.8298%" y="164" width="0.5319%" height="15" fill="rgb(224,169,11)" fg:x="120" fg:w="1"/><text x="64.0798%" y="174.50"></text></g><g><title>__exit__ (rclpy/executors.py:80) (1 samples, 0.53%)</title><rect x="63.8298%" y="180" width="0.5319%" height="15" fill="rgb(250,166,2)" fg:x="120" fg:w="1"/><text x="64.0798%" y="190.50"></text></g><g><title>notify_all (threading.py:396) (1 samples, 0.53%)</title><rect x="63.8298%" y="196" width="0.5319%" height="15" fill="rgb(242,216,29)" fg:x="120" fg:w="1"/><text x="64.0798%" y="206.50"></text></g><g><title>notify (threading.py:369) (1 samples, 0.53%)</title><rect x="63.8298%" y="212" width="0.5319%" height="15" fill="rgb(230,116,27)" fg:x="120" fg:w="1"/><text x="64.0798%" y="222.50"></text></g><g><title>__init__ (geometry_msgs/msg/_pose.py:81) (1 samples, 0.53%)</title><rect x="75.0000%" y="196" width="0.5319%" height="15" fill="rgb(228,99,48)" fg:x="141" fg:w="1"/><text x="75.2500%" y="206.50"></text></g><g><title>__init__ (geometry_msgs/msg/_pose_with_covariance.py:86) (1 samples, 0.53%)</title><rect x="75.5319%" y="196" width="0.5319%" height="15" fill="rgb(253,11,6)" fg:x="142" fg:w="1"/><text x="75.7819%" y="206.50"></text></g><g><title>__init__ (geometry_msgs/msg/_pose.py:81) (1 samples, 0.53%)</title><rect x="75.5319%" y="212" width="0.5319%" height="15" fill="rgb(247,143,39)" fg:x="142" fg:w="1"/><text x="75.7819%" y="222.50"></text></g><g><title>__init__ (geometry_msgs/msg/_quaternion.py:105) (1 samples, 0.53%)</title><rect x="76.0638%" y="196" width="0.5319%" height="15" fill="rgb(236,97,10)" fg:x="143" fg:w="1"/><text x="76.3138%" y="206.50"></text></g><g><title>__init__ (geometry_msgs/msg/_quaternion.py:110) (1 samples, 0.53%)</title><rect x="76.5957%" y="196" width="0.5319%" height="15" fill="rgb(233,208,19)" fg:x="144" fg:w="1"/><text x="76.8457%" y="206.50"></text></g><g><title>__init__ (geometry_msgs/msg/_transform.py:84) (1 samples, 0.53%)</title><rect x="77.1277%" y="196" width="0.5319%" height="15" fill="rgb(216,164,2)" fg:x="145" fg:w="1"/><text x="77.3777%" y="206.50"></text></g><g><title>__init__ (geometry_msgs/msg/_quaternion.py:110) (1 samples, 0.53%)</title><rect x="78.1915%" y="212" width="0.5319%" height="15" fill="rgb(220,129,5)" fg:x="147" fg:w="1"/><text x="78.4415%" y="222.50"></text></g><g><title>y (geometry_msgs/msg/_quaternion.py:187) (1 samples, 0.53%)</title><rect x="78.1915%" y="228" width="0.5319%" height="15" fill="rgb(242,17,10)" fg:x="147" fg:w="1"/><text x="78.4415%" y="238.50"></text></g><g><title>__init__ (geometry_msgs/msg/_transform.py:87) (3 samples, 1.60%)</title><rect x="77.6596%" y="196" width="1.5957%" height="15" fill="rgb(242,107,0)" fg:x="146" fg:w="3"/><text x="77.9096%" y="206.50"></text></g><g><title>__init__ (geometry_msgs/msg/_quaternion.py:114) (1 samples, 0.53%)</title><rect x="78.7234%" y="212" width="0.5319%" height="15" fill="rgb(251,28,31)" fg:x="148" fg:w="1"/><text x="78.9734%" y="222.50"></text></g><g><title>__init__ (geometry_msgs/msg/_transform_stamped.py:88) (2 samples, 1.06%)</title><rect x="79.2553%" y="196" width="1.0638%" height="15" fill="rgb(233,223,10)" fg:x="149" fg:w="2"/><text x="79.5053%" y="206.50"></text></g><g><title>__init__ (std_msgs/msg/_header.py:81) (1 samples, 0.53%)</title><rect x="79.7872%" y="212" width="0.5319%" height="15" fill="rgb(215,21,27)" fg:x="150" fg:w="1"/><text x="80.0372%" y="222.50"></text></g><g><title>__init__ (builtin_interfaces/msg/_time.py:76) (1 samples, 0.53%)</title><rect x="79.7872%" y="228" width="0.5319%" height="15" fill="rgb(232,23,21)" fg:x="150" fg:w="1"/><text x="80.0372%" y="238.50"></text></g><g><title>sec (builtin_interfaces/msg/_time.py:130) (1 samples, 0.53%)</title><rect x="79.7872%" y="244" width="0.5319%" height="15" fill="rgb(244,5,23)" fg:x="150" fg:w="1"/><text x="80.0372%" y="254.50"></text></g><g><title>__init__ (geometry_msgs/msg/_transform.py:81) (1 samples, 0.53%)</title><rect x="80.3191%" y="212" width="0.5319%" height="15" fill="rgb(226,81,46)" fg:x="151" fg:w="1"/><text x="80.5691%" y="222.50"></text></g><g><title>__init__ (geometry_msgs/msg/_transform.py:84) (1 samples, 0.53%)</title><rect x="80.8511%" y="212" width="0.5319%" height="15" fill="rgb(247,70,30)" fg:x="152" fg:w="1"/><text x="81.1011%" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1064) (1 samples, 0.53%)</title><rect x="80.8511%" y="228" width="0.5319%" height="15" fill="rgb(212,68,19)" fg:x="152" fg:w="1"/><text x="81.1011%" y="238.50"></text></g><g><title>__init__ (geometry_msgs/msg/_vector3.py:81) (1 samples, 0.53%)</title><rect x="81.3830%" y="228" width="0.5319%" height="15" fill="rgb(240,187,13)" fg:x="153" fg:w="1"/><text x="81.6330%" y="238.50"></text></g><g><title>__init__ (geometry_msgs/msg/_transform.py:85) (2 samples, 1.06%)</title><rect x="81.3830%" y="212" width="1.0638%" height="15" fill="rgb(223,113,26)" fg:x="153" fg:w="2"/><text x="81.6330%" y="222.50"></text></g><g><title>__init__ (geometry_msgs/msg/_vector3.py:83) (1 samples, 0.53%)</title><rect x="81.9149%" y="228" width="0.5319%" height="15" fill="rgb(206,192,2)" fg:x="154" fg:w="1"/><text x="82.1649%" y="238.50"></text></g><g><title>z (geometry_msgs/msg/_vector3.py:168) (1 samples, 0.53%)</title><rect x="81.9149%" y="244" width="0.5319%" height="15" fill="rgb(241,108,4)" fg:x="154" fg:w="1"/><text x="82.1649%" y="254.50"></text></g><g><title>__init__ (geometry_msgs/msg/_transform.py:86) (1 samples, 0.53%)</title><rect x="82.4468%" y="212" width="0.5319%" height="15" fill="rgb(247,173,49)" fg:x="155" fg:w="1"/><text x="82.6968%" y="222.50"></text></g><g><title>__init__ (geometry_msgs/msg/_quaternion.py:105) (1 samples, 0.53%)</title><rect x="82.9787%" y="228" width="0.5319%" height="15" fill="rgb(224,114,35)" fg:x="156" fg:w="1"/><text x="83.2287%" y="238.50"></text></g><g><title>&lt;genexpr&gt; (geometry_msgs/msg/_quaternion.py:105) (1 samples, 0.53%)</title><rect x="82.9787%" y="244" width="0.5319%" height="15" fill="rgb(245,159,27)" fg:x="156" fg:w="1"/><text x="83.2287%" y="254.50"></text></g><g><title>__init__ (geometry_msgs/msg/_transform.py:87) (2 samples, 1.06%)</title><rect x="82.9787%" y="212" width="1.0638%" height="15" fill="rgb(245,172,44)" fg:x="156" fg:w="2"/><text x="83.2287%" y="222.50"></text></g><g><title>__init__ (geometry_msgs/msg/_quaternion.py:108) (1 samples, 0.53%)</title><rect x="83.5106%" y="228" width="0.5319%" height="15" fill="rgb(236,23,11)" fg:x="157" fg:w="1"/><text x="83.7606%" y="238.50"></text></g><g><title>x (geometry_msgs/msg/_quaternion.py:170) (1 samples, 0.53%)</title><rect x="83.5106%" y="244" width="0.5319%" height="15" fill="rgb(205,117,38)" fg:x="157" fg:w="1"/><text x="83.7606%" y="254.50"></text></g><g><title>__init__ (geometry_msgs/msg/_transform_stamped.py:91) (8 samples, 4.26%)</title><rect x="80.3191%" y="196" width="4.2553%" height="15" fill="rgb(237,72,25)" fg:x="151" fg:w="8"/><text x="80.5691%" y="206.50">__ini..</text></g><g><title>transform (geometry_msgs/msg/_transform_stamped.py:170) (1 samples, 0.53%)</title><rect x="84.0426%" y="212" width="0.5319%" height="15" fill="rgb(244,70,9)" fg:x="158" fg:w="1"/><text x="84.2926%" y="222.50"></text></g><g><title>__init__ (nav_msgs/msg/_odometry.py:91) (1 samples, 0.53%)</title><rect x="84.5745%" y="196" width="0.5319%" height="15" fill="rgb(217,125,39)" fg:x="159" fg:w="1"/><text x="84.8245%" y="206.50"></text></g><g><title>__init__ (nav_msgs/msg/_odometry.py:94) (1 samples, 0.53%)</title><rect x="85.1064%" y="196" width="0.5319%" height="15" fill="rgb(235,36,10)" fg:x="160" fg:w="1"/><text x="85.3564%" y="206.50"></text></g><g><title>__init__ (geometry_msgs/msg/_pose_with_covariance.py:86) (1 samples, 0.53%)</title><rect x="85.6383%" y="212" width="0.5319%" height="15" fill="rgb(251,123,47)" fg:x="161" fg:w="1"/><text x="85.8883%" y="222.50"></text></g><g><title>__init__ (geometry_msgs/msg/_pose.py:85) (1 samples, 0.53%)</title><rect x="85.6383%" y="228" width="0.5319%" height="15" fill="rgb(221,13,13)" fg:x="161" fg:w="1"/><text x="85.8883%" y="238.50"></text></g><g><title>__init__ (nav_msgs/msg/_odometry.py:98) (2 samples, 1.06%)</title><rect x="85.6383%" y="196" width="1.0638%" height="15" fill="rgb(238,131,9)" fg:x="161" fg:w="2"/><text x="85.8883%" y="206.50"></text></g><g><title>__init__ (geometry_msgs/msg/_pose_with_covariance.py:88) (1 samples, 0.53%)</title><rect x="86.1702%" y="212" width="0.5319%" height="15" fill="rgb(211,50,8)" fg:x="162" fg:w="1"/><text x="86.4202%" y="222.50"></text></g><g><title>__init__ (spot_msgs/msg/_battery_state.py:152) (1 samples, 0.53%)</title><rect x="86.7021%" y="196" width="0.5319%" height="15" fill="rgb(245,182,24)" fg:x="163" fg:w="1"/><text x="86.9521%" y="206.50"></text></g><g><title>header (spot_msgs/msg/_battery_state.py:222) (1 samples, 0.53%)</title><rect x="86.7021%" y="212" width="0.5319%" height="15" fill="rgb(242,14,37)" fg:x="163" fg:w="1"/><text x="86.9521%" y="222.50"></text></g><g><title>__init__ (spot_msgs/msg/_battery_state_array.py:77) (1 samples, 0.53%)</title><rect x="87.2340%" y="196" width="0.5319%" height="15" fill="rgb(246,228,12)" fg:x="164" fg:w="1"/><text x="87.4840%" y="206.50"></text></g><g><title>battery_states (spot_msgs/msg/_battery_state_array.py:127) (1 samples, 0.53%)</title><rect x="87.2340%" y="212" width="0.5319%" height="15" fill="rgb(213,55,15)" fg:x="164" fg:w="1"/><text x="87.4840%" y="222.50"></text></g><g><title>__init__ (std_msgs/msg/_header.py:77) (1 samples, 0.53%)</title><rect x="87.7660%" y="196" width="0.5319%" height="15" fill="rgb(209,9,3)" fg:x="165" fg:w="1"/><text x="88.0160%" y="206.50"></text></g><g><title>__init__ (builtin_interfaces/msg/_time.py:73) (2 samples, 1.06%)</title><rect x="88.2979%" y="212" width="1.0638%" height="15" fill="rgb(230,59,30)" fg:x="166" fg:w="2"/><text x="88.5479%" y="222.50"></text></g><g><title>__init__ (std_msgs/msg/_header.py:81) (3 samples, 1.60%)</title><rect x="88.2979%" y="196" width="1.5957%" height="15" fill="rgb(209,121,21)" fg:x="166" fg:w="3"/><text x="88.5479%" y="206.50"></text></g><g><title>__init__ (builtin_interfaces/msg/_time.py:77) (1 samples, 0.53%)</title><rect x="89.3617%" y="212" width="0.5319%" height="15" fill="rgb(220,109,13)" fg:x="168" fg:w="1"/><text x="89.6117%" y="222.50"></text></g><g><title>__init__ (tf2_msgs/msg/_tf_message.py:74) (1 samples, 0.53%)</title><rect x="89.8936%" y="196" width="0.5319%" height="15" fill="rgb(232,18,1)" fg:x="169" fg:w="1"/><text x="90.1436%" y="206.50"></text></g><g><title>__init__ (tf2_msgs/msg/_tf_message.py:77) (1 samples, 0.53%)</title><rect x="90.4255%" y="196" width="0.5319%" height="15" fill="rgb(215,41,42)" fg:x="170" fg:w="1"/><text x="90.6755%" y="206.50"></text></g><g><title>transforms (tf2_msgs/msg/_tf_message.py:131) (1 samples, 0.53%)</title><rect x="90.4255%" y="212" width="0.5319%" height="15" fill="rgb(224,123,36)" fg:x="170" fg:w="1"/><text x="90.6755%" y="222.50"></text></g><g><title>handler (rclpy/executors.py:440) (51 samples, 27.13%)</title><rect x="64.3617%" y="164" width="27.1277%" height="15" fill="rgb(240,125,3)" fg:x="121" fg:w="51"/><text x="64.6117%" y="174.50">handler (rclpy/executors.py:440)</text></g><g><title>_take_subscription (rclpy/executors.py:365) (51 samples, 27.13%)</title><rect x="64.3617%" y="180" width="27.1277%" height="15" fill="rgb(205,98,50)" fg:x="121" fg:w="51"/><text x="64.6117%" y="190.50">_take_subscription (rclpy/executors.py:365)</text></g><g><title>translation (geometry_msgs/msg/_transform.py:137) (1 samples, 0.53%)</title><rect x="90.9574%" y="196" width="0.5319%" height="15" fill="rgb(205,185,37)" fg:x="171" fg:w="1"/><text x="91.2074%" y="206.50"></text></g><g><title>await_or_execute (rclpy/executors.py:102) (1 samples, 0.53%)</title><rect x="91.4894%" y="196" width="0.5319%" height="15" fill="rgb(238,207,15)" fg:x="172" fg:w="1"/><text x="91.7394%" y="206.50"></text></g><g><title>iscoroutinefunction (inspect.py:313) (1 samples, 0.53%)</title><rect x="91.4894%" y="212" width="0.5319%" height="15" fill="rgb(213,199,42)" fg:x="172" fg:w="1"/><text x="91.7394%" y="222.50"></text></g><g><title>_has_code_flag (inspect.py:297) (1 samples, 0.53%)</title><rect x="91.4894%" y="228" width="0.5319%" height="15" fill="rgb(235,201,11)" fg:x="172" fg:w="1"/><text x="91.7394%" y="238.50"></text></g><g><title>_signature_is_functionlike (inspect.py:2004) (1 samples, 0.53%)</title><rect x="91.4894%" y="244" width="0.5319%" height="15" fill="rgb(207,46,11)" fg:x="172" fg:w="1"/><text x="91.7394%" y="254.50"></text></g><g><title>generic_cb (spot_connector/tcp_interface_node.py:126) (4 samples, 2.13%)</title><rect x="92.0213%" y="212" width="2.1277%" height="15" fill="rgb(241,35,35)" fg:x="173" fg:w="4"/><text x="92.2713%" y="222.50">g..</text></g><g><title>debug (rclpy/impl/rcutils_logger.py:325) (3 samples, 1.60%)</title><rect x="92.5532%" y="228" width="1.5957%" height="15" fill="rgb(243,32,47)" fg:x="174" fg:w="3"/><text x="92.8032%" y="238.50"></text></g><g><title>log (rclpy/impl/rcutils_logger.py:276) (2 samples, 1.06%)</title><rect x="93.0851%" y="244" width="1.0638%" height="15" fill="rgb(247,202,23)" fg:x="175" fg:w="2"/><text x="93.3351%" y="254.50"></text></g><g><title>is_enabled_for (rclpy/impl/rcutils_logger.py:238) (1 samples, 0.53%)</title><rect x="93.6170%" y="260" width="0.5319%" height="15" fill="rgb(219,102,11)" fg:x="176" fg:w="1"/><text x="93.8670%" y="270.50"></text></g><g><title>__call__ (enum.py:385) (1 samples, 0.53%)</title><rect x="93.6170%" y="276" width="0.5319%" height="15" fill="rgb(243,110,44)" fg:x="176" fg:w="1"/><text x="93.8670%" y="286.50"></text></g><g><title>generic_cb (spot_connector/tcp_interface_node.py:166) (1 samples, 0.53%)</title><rect x="94.1489%" y="212" width="0.5319%" height="15" fill="rgb(222,74,54)" fg:x="177" fg:w="1"/><text x="94.3989%" y="222.50"></text></g><g><title>__call__ (spot_connector/ApiManager.py:99) (1 samples, 0.53%)</title><rect x="94.1489%" y="228" width="0.5319%" height="15" fill="rgb(216,99,12)" fg:x="177" fg:w="1"/><text x="94.3989%" y="238.50"></text></g><g><title>generic_cb (spot_connector/tcp_interface_node.py:170) (1 samples, 0.53%)</title><rect x="94.6809%" y="212" width="0.5319%" height="15" fill="rgb(226,22,26)" fg:x="178" fg:w="1"/><text x="94.9309%" y="222.50"></text></g><g><title>generic_cb (spot_connector/tcp_interface_node.py:172) (1 samples, 0.53%)</title><rect x="95.2128%" y="212" width="0.5319%" height="15" fill="rgb(217,163,10)" fg:x="179" fg:w="1"/><text x="95.4628%" y="222.50"></text></g><g><title>pose (geometry_msgs/msg/_pose_with_covariance.py:136) (1 samples, 0.53%)</title><rect x="95.2128%" y="228" width="0.5319%" height="15" fill="rgb(213,25,53)" fg:x="179" fg:w="1"/><text x="95.4628%" y="238.50"></text></g><g><title>&lt;dictcomp&gt; (spot_connector/tcp_interface_node.py:189) (1 samples, 0.53%)</title><rect x="95.7447%" y="228" width="0.5319%" height="15" fill="rgb(252,105,26)" fg:x="180" fg:w="1"/><text x="95.9947%" y="238.50"></text></g><g><title>generic_cb (spot_connector/tcp_interface_node.py:183) (2 samples, 1.06%)</title><rect x="95.7447%" y="212" width="1.0638%" height="15" fill="rgb(220,39,43)" fg:x="180" fg:w="2"/><text x="95.9947%" y="222.50"></text></g><g><title>&lt;dictcomp&gt; (spot_connector/tcp_interface_node.py:192) (1 samples, 0.53%)</title><rect x="96.2766%" y="228" width="0.5319%" height="15" fill="rgb(229,68,48)" fg:x="181" fg:w="1"/><text x="96.5266%" y="238.50"></text></g><g><title>generic_cb (spot_connector/tcp_interface_node.py:204) (2 samples, 1.06%)</title><rect x="96.8085%" y="212" width="1.0638%" height="15" fill="rgb(252,8,32)" fg:x="182" fg:w="2"/><text x="97.0585%" y="222.50"></text></g><g><title>mult (bosdyn/client/math_helpers.py:667) (2 samples, 1.06%)</title><rect x="96.8085%" y="228" width="1.0638%" height="15" fill="rgb(223,20,43)" fg:x="182" fg:w="2"/><text x="97.0585%" y="238.50"></text></g><g><title>transform_point (bosdyn/client/math_helpers.py:774) (1 samples, 0.53%)</title><rect x="97.3404%" y="244" width="0.5319%" height="15" fill="rgb(229,81,49)" fg:x="183" fg:w="1"/><text x="97.5904%" y="254.50"></text></g><g><title>inverse (bosdyn/client/math_helpers.py:769) (1 samples, 0.53%)</title><rect x="97.3404%" y="260" width="0.5319%" height="15" fill="rgb(236,28,36)" fg:x="183" fg:w="1"/><text x="97.5904%" y="270.50"></text></g><g><title>transform_point (bosdyn/client/math_helpers.py:775) (1 samples, 0.53%)</title><rect x="97.8723%" y="244" width="0.5319%" height="15" fill="rgb(249,185,26)" fg:x="184" fg:w="1"/><text x="98.1223%" y="254.50"></text></g><g><title>__init__ (bosdyn/client/math_helpers.py:762) (1 samples, 0.53%)</title><rect x="97.8723%" y="260" width="0.5319%" height="15" fill="rgb(249,174,33)" fg:x="184" fg:w="1"/><text x="98.1223%" y="270.50"></text></g><g><title>handler (rclpy/executors.py:447) (14 samples, 7.45%)</title><rect x="91.4894%" y="164" width="7.4468%" height="15" fill="rgb(233,201,37)" fg:x="172" fg:w="14"/><text x="91.7394%" y="174.50">handler (r..</text></g><g><title>_execute_subscription (rclpy/executors.py:372) (14 samples, 7.45%)</title><rect x="91.4894%" y="180" width="7.4468%" height="15" fill="rgb(221,78,26)" fg:x="172" fg:w="14"/><text x="91.7394%" y="190.50">_execute_s..</text></g><g><title>await_or_execute (rclpy/executors.py:107) (13 samples, 6.91%)</title><rect x="92.0213%" y="196" width="6.9149%" height="15" fill="rgb(250,127,30)" fg:x="173" fg:w="13"/><text x="92.2713%" y="206.50">await_or_..</text></g><g><title>generic_cb (spot_connector/tcp_interface_node.py:207) (2 samples, 1.06%)</title><rect x="97.8723%" y="212" width="1.0638%" height="15" fill="rgb(230,49,44)" fg:x="184" fg:w="2"/><text x="98.1223%" y="222.50"></text></g><g><title>transform_point (bosdyn/client/math_helpers.py:603) (2 samples, 1.06%)</title><rect x="97.8723%" y="228" width="1.0638%" height="15" fill="rgb(229,67,23)" fg:x="184" fg:w="2"/><text x="98.1223%" y="238.50"></text></g><g><title>transform_point (bosdyn/client/math_helpers.py:777) (1 samples, 0.53%)</title><rect x="98.4043%" y="244" width="0.5319%" height="15" fill="rgb(249,83,47)" fg:x="185" fg:w="1"/><text x="98.6543%" y="254.50"></text></g><g><title>mult (bosdyn/client/math_helpers.py:936) (1 samples, 0.53%)</title><rect x="98.4043%" y="260" width="0.5319%" height="15" fill="rgb(215,43,3)" fg:x="185" fg:w="1"/><text x="98.6543%" y="270.50"></text></g><g><title>__call__ (rclpy/task.py:254) (69 samples, 36.70%)</title><rect x="62.7660%" y="148" width="36.7021%" height="15" fill="rgb(238,154,13)" fg:x="118" fg:w="69"/><text x="63.0160%" y="158.50">__call__ (rclpy/task.py:254)</text></g><g><title>handler (rclpy/executors.py:452) (1 samples, 0.53%)</title><rect x="98.9362%" y="164" width="0.5319%" height="15" fill="rgb(219,56,2)" fg:x="186" fg:w="1"/><text x="99.1862%" y="174.50"></text></g><g><title>trigger (rclpy/guard_condition.py:33) (1 samples, 0.53%)</title><rect x="98.9362%" y="180" width="0.5319%" height="15" fill="rgb(233,0,4)" fg:x="186" fg:w="1"/><text x="99.1862%" y="190.50"></text></g><g><title>all (188 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(235,30,7)" fg:x="0" fg:w="188"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (tcp_interface_node:33) (188 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(250,79,13)" fg:x="0" fg:w="188"/><text x="0.2500%" y="78.50">&lt;module&gt; (tcp_interface_node:33)</text></g><g><title>main (spot_connector/tcp_interface_node.py:1048) (188 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(211,146,34)" fg:x="0" fg:w="188"/><text x="0.2500%" y="94.50">main (spot_connector/tcp_interface_node.py:1048)</text></g><g><title>spin (rclpy/__init__.py:226) (185 samples, 98.40%)</title><rect x="1.5957%" y="100" width="98.4043%" height="15" fill="rgb(228,22,38)" fg:x="3" fg:w="185"/><text x="1.8457%" y="110.50">spin (rclpy/__init__.py:226)</text></g><g><title>spin_once (rclpy/executors.py:751) (185 samples, 98.40%)</title><rect x="1.5957%" y="116" width="98.4043%" height="15" fill="rgb(235,168,5)" fg:x="3" fg:w="185"/><text x="1.8457%" y="126.50">spin_once (rclpy/executors.py:751)</text></g><g><title>_spin_once_impl (rclpy/executors.py:746) (72 samples, 38.30%)</title><rect x="61.7021%" y="132" width="38.2979%" height="15" fill="rgb(221,155,16)" fg:x="116" fg:w="72"/><text x="61.9521%" y="142.50">_spin_once_impl (rclpy/executors.py:746)</text></g><g><title>__call__ (rclpy/task.py:258) (1 samples, 0.53%)</title><rect x="99.4681%" y="148" width="0.5319%" height="15" fill="rgb(215,215,53)" fg:x="187" fg:w="1"/><text x="99.7181%" y="158.50"></text></g></svg></svg>